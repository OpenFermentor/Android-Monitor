buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
        classpath 'com.google.gms:google-services:3.1.1'
        classpath 'io.fabric.tools:gradle:1.24.2'
    }
}

apply plugin: "io.gitlab.arturbosch.detekt"
apply plugin: 'com.android.application'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: '../detekt.gradle'

def getSignInformation = { keystorePath, keystorePropertyPath ->
    def keyStore = file(keystorePath)
    if (!keyStore.exists()) {
        logger.error("Keystore file not found, path=${keyStore.absolutePath}")
        return
    }
    def propertiesFile = file(keystorePropertyPath)
    if (!propertiesFile.exists()) {
        logger.error("Keystore properties file not found, path=${propertiesFile.absolutePath}")
        return
    }
    def Properties properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    return [
            storeFile    : keyStore,
            storePassword: properties["store_password"],
            keyAlias     : properties["key_alias"],
            keyPassword  : properties["key_password"]
    ]
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.xmartlabs.bigbang.template"
        minSdkVersion 21
        multiDexEnabled true
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }
    dexOptions {
        javaMaxHeapSize '4g'
    }
    signingConfigs {
        //noinspection GroovyMissingReturnStatement
        debug {
            def signInformation = getSignInformation("debug.keystore", "keystore.properties")
            if (signInformation != null) {
                storeFile signInformation.storeFile
                storePassword signInformation.storePassword
                keyAlias signInformation.keyAlias
                keyPassword signInformation.keyPassword
            }
        }
        //noinspection GroovyMissingReturnStatement
        release {
            def signInformation = getSignInformation("release.keystore", "keystore.properties")
            if (signInformation != null) {
                storeFile signInformation.storeFile
                storePassword signInformation.storePassword
                keyAlias signInformation.keyAlias
                keyPassword signInformation.keyPassword
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions 'version', 'env'
    productFlavors {
        //noinspection GroovyMissingReturnStatement
        production {
            dimension 'env'
        }

        staging {
            dimension 'env'
            applicationIdSuffix '.staging'
        }

        lollipopAndAbove {
            dimension 'version'
            minSdkVersion 21 // For faster multidex compilation
        }

        allVersions {
            dimension 'version'
        }
    }
    //noinspection GroovyMissingReturnStatement
    lintOptions {
        warning 'InvalidPackage'
    }
    packagingOptions {
        exclude '.readme'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

final ANDROID_SUPPORT_VERSION = '26.1.0'
final BULLET_VERSION = 'e5044b53df'
final BIGBANG_VERSION = '6d0aa24'
final DAGGER_VERSION = '2.11'
final DART_VERSION = '2.0.2'
final DBFLOW_VERSION = '4.1.2'
final FLEXBOX_LAYOUT_VERSION = '0.3.1'
final FLOATING_SEARCH_VIEW_VERSION = '2.1.1'
final FRAGMENTARGS_VERSION = '3.0.2'
final JAVA_CHANNELS_VERSION = '0b113ce'
final KOTLIN_VERSION = '1.1.4-3'
final LOCALDATE_BACKPORT_VERSION = '1.0.5'
final MATERIAL_DIALOGS_VERSION = '0.9.4.7'
final MPANDROID_CHARTS_VERSION = 'v3.0.3'
final MULTIDEX_VERSION = '1.0.2'
final PARCELER_VERSION = '1.1.9'
final RETROFIT_VERSION = '2.3.0'
final RXANDROID_VERSION = '2.0.1'
final RXJAVA_VERSION = '2.1.5'
final RXLIFECYCLE_VERSION = '2.2.0'
final TIMBER_VERSION = '4.5.1'
final TRACEUR_VERSION = '273cc7d582'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile "com.android.support:multidex:${MULTIDEX_VERSION}"
    androidTestCompile "com.android.support:multidex-instrumentation:${MULTIDEX_VERSION}"
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile 'com.google.code.findbugs:jsr305:3.0.1'
    implementation "com.afollestad.material-dialogs:core:${MATERIAL_DIALOGS_VERSION}"
    implementation "com.android.support:appcompat-v7:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:cardview-v7:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:design:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:support-v13:${ANDROID_SUPPORT_VERSION}"
    implementation "com.android.support:multidex:${MULTIDEX_VERSION}"
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
    implementation "com.f2prateek.dart:dart:${DART_VERSION}"
    implementation "com.f2prateek.dart:henson:${DART_VERSION}"
    implementation "com.github.arimorty:floatingsearchview:${FLOATING_SEARCH_VIEW_VERSION}"
    implementation("com.github.diegomedina248:JavaPhoenixChannels:${JAVA_CHANNELS_VERSION}") {
        exclude module: 'groovy-all'
    }
    implementation "com.github.PhilJay:MPAndroidChart:${MPANDROID_CHARTS_VERSION}"
    implementation "com.github.Raizlabs.DBFlow:dbflow:${DBFLOW_VERSION}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:${DBFLOW_VERSION}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:${DBFLOW_VERSION}"
    implementation "com.github.tbroyer.bullet:bullet:${BULLET_VERSION}"
    implementation "com.github.xmartlabs.bigbang:core:${BIGBANG_VERSION}"
    implementation "com.github.xmartlabs.bigbang:dbflow:${BIGBANG_VERSION}"
    implementation "com.github.xmartlabs.bigbang:log-crashlytics:${BIGBANG_VERSION}"
    implementation "com.github.xmartlabs.bigbang:retrofit:${BIGBANG_VERSION}"
    implementation "com.github.xmartlabs.bigbang:ui:${BIGBANG_VERSION}"
    implementation "com.github.xmartlabs:Traceur:${TRACEUR_VERSION}"
    implementation "com.google.android:flexbox:${FLEXBOX_LAYOUT_VERSION}"
    implementation "com.google.dagger:dagger:${DAGGER_VERSION}"
    implementation "com.hannesdorfmann.fragmentargs:annotation:${FRAGMENTARGS_VERSION}"
    implementation "com.hannesdorfmann.fragmentargs:bundler-parceler:${FRAGMENTARGS_VERSION}"
    implementation "com.jakewharton.threetenabp:threetenabp:${LOCALDATE_BACKPORT_VERSION}"
    implementation "com.jakewharton.timber:timber:${TIMBER_VERSION}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    implementation "com.trello.rxlifecycle2:rxlifecycle:${RXLIFECYCLE_VERSION}"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:${RXLIFECYCLE_VERSION}"
    implementation "io.reactivex.rxjava2:rxandroid:${RXANDROID_VERSION}"
    implementation "io.reactivex.rxjava2:rxjava:${RXJAVA_VERSION}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:${KOTLIN_VERSION}"
    implementation "org.parceler:parceler:${PARCELER_VERSION}"
    kapt "com.f2prateek.dart:dart-processor:${DART_VERSION}"
    kapt "com.f2prateek.dart:henson-processor:${DART_VERSION}"
    kapt "com.github.tbroyer.bullet:bullet-compiler:${BULLET_VERSION}"
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${DBFLOW_VERSION}"
    kapt "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    kapt "com.hannesdorfmann.fragmentargs:processor:${FRAGMENTARGS_VERSION}"
    kapt "org.parceler:parceler:${PARCELER_VERSION}"
    provided 'javax.annotation:jsr250-api:1.0'
    testCompile 'junit:junit:4.12'
}
